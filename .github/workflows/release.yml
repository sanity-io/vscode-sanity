name: release

on:
  push:
    branches:
      - main

permissions:
  contents: read # for checkout

jobs:
  package:
    runs-on: ubuntu-latest
    outputs:
      new_release: ${{ steps.check_release.outputs.new_release }}
    permissions:
      contents: write # to be able to publish a GitHub release
      issues: write # to be able to comment on released issues
      pull-requests: write # to be able to comment on released pull requests
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      VSCE_PAT: ${{ secrets.VSCE_PAT }}
      OVSX_PAT: ${{ secrets.OVSX_PAT }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 22
      - run: npm ci
      - name: Release
        id: release
        run: npm run release
      - name: Check if new release was created
        id: check_release
        run: |
          # Check if package.json was modified (indicating a new release)
          if git diff --name-only HEAD~1 HEAD 2>/dev/null | grep -q "package.json"; then
            echo "new_release=true" >> $GITHUB_OUTPUT
            echo "New release created"
          else
            echo "new_release=false" >> $GITHUB_OUTPUT
            echo "No new release created"
          fi
      - run: npm run package
        if: steps.check_release.outputs.new_release == 'true'
      - name: Upload artifact
        if: steps.check_release.outputs.new_release == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: packaged
          path: |
            vscode-sanity.vsix
            package.json
            package-lock.json

  test:
    name: "Test step"
    runs-on: ubuntu-latest
    needs: package
    if: needs.package.outputs.new_release == 'true'
    steps:
      - run: echo "test"

  openvsx:
    if: false
    name: "Publish: Open VSX"
    runs-on: ubuntu-latest
    needs: package
    env:
      OVSX_PAT: ${{ secrets.OVSX_PAT }}
    steps:
      - uses: actions/checkout@v4
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: packaged
      - uses: actions/setup-node@v4
        with:
          node-version: 22
      - run: npm ci
      - run: npm run publish:ovsx

  vsce:
    if: false
    name: "Publish: VSCode Extension"
    runs-on: ubuntu-latest
    needs: package
    env:
      VSCE_PAT: ${{ secrets.VSCE_PAT }}
    steps:
      - uses: actions/checkout@v4
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: packaged
      - uses: actions/setup-node@v4
        with:
          node-version: 22
      - run: npm ci
      - run: npm run publish:vsce
